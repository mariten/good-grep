#!/bin/bash
# Perform Pretty Grep search
SEARCH_TERM=$1
PARAMS=$2

# Also see, https://github.com/mariten/good-grep/blob/master/sample/.gg_excludes
GG_EXCLUDES="$HOME/.gg_excludes"

if [ ! -f $GG_EXCLUDES ]; then
    `echo \#Revision Control > $GG_EXCLUDES`
    `echo .svn >> $GG_EXCLUDES`
    `echo .git >> $GG_EXCLUDES`
fi

# Perform grep command and trim leading whitespace of results using sed
GREP_RESULTS=`                                                              \
    egrep                                                                   \
    --color=always                                                          \
    --exclude-from=$GG_EXCLUDES                                             \
    -nr"$2"                                                                 \
    "$1"                                                                    \
    *                                                                       \
    2>/dev/null                                                             \
    |                                                                       \
    sed -e 's/\[K:\[m\[K[ \t][ \t]*/[K:[m[K/'`
    # The above "sed" command removes whitespace preceeding the matched lines from grep
    # With this, indented lines of code will take up less space on the screen
    # The regex contains *nix-style escape characters (used in color codes) which don't show up in GitHub's viewer

# Check number of lines
LINE_LIMIT=50
GREP_LINES=`echo "$GREP_RESULTS" | wc -l`

if [ "$LINE_LIMIT" -gt "$GREP_LINES" ]
then
    # Lines do not exceed limit, output directly to stdout
    echo "$GREP_RESULTS"
else
    # Lots of output, send to pager
    echo "$GREP_RESULTS" | less -RX

fi
